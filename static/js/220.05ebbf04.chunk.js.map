{"version":3,"file":"static/js/220.05ebbf04.chunk.js","mappings":"yNAOA,MAAM,MAAEA,GAAUC,EAAAA,EA8DlB,EA5DwBC,KACtB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMC,KAAKH,QACrDI,GAAkBH,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMC,KAAKC,mBAErEC,EAAAA,EAAAA,YAAU,KACJD,GACFN,EAAS,WAAY,CAAEQ,SAAS,GAClC,GACC,CAACF,EAAiBN,IAcrB,OACES,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,SAAU,QAASC,OAAQ,aAAcC,SAAA,EACrDC,EAAAA,EAAAA,KAACnB,EAAK,CAACoB,MAAO,EAAEF,SAAC,WACjBJ,EAAAA,EAAAA,MAACO,EAAAA,EAAI,CACHC,KAAK,QACLC,SAjBYC,IAChB,MAAM,SAAEC,EAAQ,SAAEC,GAAaF,EAC/B,GAAiB,UAAbC,GAAqC,UAAbC,EAAsB,CAChD,MAAMC,EAAQ,aACdxB,GAASyB,EAAAA,EAAAA,IAAaD,IACtBE,aAAaC,QAAQ,kBAAmB,QACxCzB,EAAS,WAAY,CAAEQ,SAAS,GAClC,MACEV,GAAS4B,EAAAA,EAAAA,IAAa,qDACxB,EASIC,cAAe,CAAEP,SAAU,QAASC,SAAU,SAAUR,SAAA,EAExDC,EAAAA,EAAAA,KAACE,EAAAA,EAAKY,KAAI,CACRC,MAAM,WACNZ,KAAK,WACLa,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCAAiCnB,UAEpEC,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,OAGRnB,EAAAA,EAAAA,KAACE,EAAAA,EAAKY,KAAI,CACRC,MAAM,WACNZ,KAAK,WACLa,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCAAiCnB,UAEpEC,EAAAA,EAAAA,KAACmB,EAAAA,EAAMC,SAAQ,MAGhBhC,IAASY,EAAAA,EAAAA,KAAClB,EAAAA,EAAWuC,KAAI,CAACC,KAAK,SAAQvB,SAAEX,KAE1CY,EAAAA,EAAAA,KAACE,EAAAA,EAAKY,KAAI,CAAAf,UACRC,EAAAA,EAAAA,KAACuB,EAAAA,GAAM,CAACD,KAAK,UAAUE,SAAS,SAAQzB,SAAC,iBAKzC,C","sources":["pages/Login.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../store';\nimport { loginSuccess, loginFailure } from '../store/authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, Input, Button, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst Login: React.FC = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const error = useSelector((state: RootState) => state.auth.error);\n  const isAuthenticated = useSelector((state: RootState) => state.auth.isAuthenticated);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate('/profile', { replace: true });\n    }\n  }, [isAuthenticated, navigate]);\n\n  const onFinish = (values: { username: string; password: string }) => {\n    const { username, password } = values;\n    if (username === 'admin' && password === '12345') {\n      const token = 'fake-token';\n      dispatch(loginSuccess(token));\n      localStorage.setItem('isAuthenticated', 'true');\n      navigate('/profile', { replace: true });\n    } else {\n      dispatch(loginFailure('The username or password you entered is incorrect'));\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: '300px', margin: '50px auto' }}>\n      <Title level={2}>Login</Title>\n      <Form\n        name=\"login\"\n        onFinish={onFinish}\n        initialValues={{ username: 'admin', password: '12345' }}\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[{ required: true, message: 'Please input your username!' }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[{ required: true, message: 'Please input your password!' }]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        {error && <Typography.Text type=\"danger\">{error}</Typography.Text>}\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Login\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Login;"],"names":["Title","Typography","Login","dispatch","useDispatch","navigate","useNavigate","error","useSelector","state","auth","isAuthenticated","useEffect","replace","_jsxs","style","maxWidth","margin","children","_jsx","level","Form","name","onFinish","values","username","password","token","loginSuccess","localStorage","setItem","loginFailure","initialValues","Item","label","rules","required","message","Input","Password","Text","type","Button","htmlType"],"sourceRoot":""}