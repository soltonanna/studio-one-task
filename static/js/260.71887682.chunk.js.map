{"version":3,"file":"static/js/260.71887682.chunk.js","mappings":"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","sources":["utils/primeUtils.ts","components/NewsItem.tsx","pages/News.tsx"],"sourcesContent":["export const isPrime = (num: number): boolean => {\n    if (num <= 1) return false;\n    if (num <= 3) return true;\n    if (num % 2 === 0 || num % 3 === 0) return false;\n    for (let i = 5; i * i <= num; i += 6) {\n      if (num % i === 0 || num % (i + 2) === 0) return false;\n    }\n    return true;\n};\n  ","import React from 'react';\nimport { Card, Button } from 'antd';\nimport { isPrime } from '../utils/primeUtils';\nimport noImage from '../media/not-found.jpg';\n\ninterface NewsItemProps {\n  item: {\n    id: number;\n    title: string;\n    description: string;\n    image: string;\n    fibonacci: number;\n  };\n  onDelete: () => void;\n}\n\nconst NewsItem: React.FC<NewsItemProps> = ({ item, onDelete }) => {\n  return (\n    <Card\n      className='news-single-item'\n      hoverable\n      cover={\n        <img \n          src={item.image ? item.image : noImage} \n          alt={item.title} \n          loading=\"lazy\" \n        />\n      }\n      style={{ marginBottom: '16px' }}\n    >\n      <Card.Meta\n        title={\n          <>\n            {item.title} <span>( {item.fibonacci} {isPrime(item.fibonacci) && <span> : Prime Number</span>})</span>\n          </>\n        }\n        description={item.description}\n      />\n      <Button type=\"primary\" onClick={onDelete} style={{ marginTop: '16px' }}>\n        Delete\n      </Button>\n    </Card>\n  );\n};\n\nexport default NewsItem;\n","// News.tsx\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchNews, addNews, deleteNews } from '../store/newsSlice';\nimport { RootState, AppDispatch } from '../store';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport NewsItem from '../components/NewsItem';\nimport { Modal, Input, Button, Form, Typography } from 'antd';\n\nconst { Search } = Input;\nconst { Title } = Typography;\n\nconst News: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { news, status, error } = useSelector((state: RootState) => state.news);\n  const [hasMore, setHasMore] = useState(true);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [newNews, setNewNews] = useState({ title: '', description: '', image: '', fibonacci: 0 });\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchNews());\n    }\n  }, [status, dispatch]);\n\n  const loadMoreNews = () => {\n    // Implement infinite scroll logic if needed\n    setHasMore(false);\n  };\n\n  const openModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  const handleAddNews = () => {\n    dispatch(addNews(newNews)).then(() => {\n      setNewNews({ title: '', description: '', image: '', fibonacci: 0 });\n      closeModal();\n    });\n  };\n\n  const handleDelete = (id: string) => {\n    dispatch(deleteNews(id));\n  };\n\n  const filteredNews = news.filter(item =>\n    item.title.toLowerCase().includes(searchText.toLowerCase())\n  );\n\n  return (\n    <div className=\"single-page news\">\n      <Title level={1}>News Page</Title>\n      <Button type=\"primary\" onClick={openModal} style={{ marginBottom: '16px' }}>\n        Add News\n      </Button>\n      <Search\n        placeholder=\"Search news\"\n        onSearch={(value) => setSearchText(value)}\n        style={{ marginBottom: '16px' }}\n      />\n      {status === 'loading' && <p>Loading...</p>}\n      {status === 'failed' && <p>{error}</p>}\n      <InfiniteScroll\n        className='news-list'\n        dataLength={filteredNews.length}\n        next={loadMoreNews}\n        hasMore={hasMore}\n        loader={<h4>Loading more news...</h4>}\n      >\n        {filteredNews.map((item: any) => (\n          <NewsItem \n            key={item.id} \n            item={item} \n            onDelete={() => handleDelete(item.id)} />\n        ))}\n      </InfiniteScroll>\n\n      <Modal\n        title=\"Add News\"\n        open={modalIsOpen}\n        onCancel={closeModal}\n        footer={[\n          <Button key=\"cancel\" onClick={closeModal}>\n            Cancel\n          </Button>,\n          <Button key=\"submit\" type=\"primary\" onClick={handleAddNews}>\n            Add\n          </Button>,\n        ]}\n      >\n        <Form layout=\"vertical\">\n          <Form.Item label=\"Title\">\n            <Input\n              value={newNews.title}\n              onChange={(e) => setNewNews({ ...newNews, title: e.target.value })}\n            />\n          </Form.Item>\n          <Form.Item label=\"Description\">\n            <Input.TextArea\n              value={newNews.description}\n              onChange={(e) => setNewNews({ ...newNews, description: e.target.value })}\n            />\n          </Form.Item>\n          <Form.Item label=\"Image URL\">\n            <Input\n              value={newNews.image}\n              onChange={(e) => setNewNews({ ...newNews, image: e.target.value })}\n            />\n          </Form.Item>\n          <Form.Item label=\"Fibonacci Number\">\n            <Input\n              type=\"number\"\n              value={newNews.fibonacci}\n              onChange={(e) => setNewNews({ ...newNews, fibonacci: parseInt(e.target.value) })}\n            />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default News;\n"],"names":["isPrime","num","i","_ref","item","onDelete","_jsxs","Card","className","hoverable","cover","_jsx","src","image","alt","title","loading","style","marginBottom","children","Meta","_Fragment","fibonacci","description","Button","type","onClick","marginTop","Search","Input","Title","Typography","News","dispatch","useDispatch","news","status","error","useSelector","state","hasMore","setHasMore","useState","modalIsOpen","setModalIsOpen","newNews","setNewNews","searchText","setSearchText","useEffect","fetchNews","closeModal","filteredNews","filter","toLowerCase","includes","level","openModal","placeholder","onSearch","value","InfiniteScroll","dataLength","length","next","loadMoreNews","loader","map","NewsItem","handleDelete","id","deleteNews","Modal","open","onCancel","footer","handleAddNews","addNews","then","Form","layout","Item","label","onChange","e","target","TextArea","parseInt"],"sourceRoot":""}